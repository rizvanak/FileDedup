            else:
                    k3 = "O"
                if mystring != "":
                    mystring = mystring + k2[0] + k3 + k2[2] + "A"
                else:
                    mystring = k2[0] + k3 + k2[2] + "A"
        print("mystring", mystring)

        import hashlib

        hash_object = hashlib.md5(mystring.encode())
        k = hash_object.hexdigest()
        print(k)
        qry = "update tbl_files set key_hash='" + str(k) + "' where File_id='" + str(session["File_id"]) + "'"
        print(qry)
        c = conn()
        c.nonreturn(qry)
        pyAesCrypt.encryptFile(filepath, filepath + ".aes", k, bufferSize)
        with open(filepath + ".aes", "rb")as image:

            f = image.read()
            b = bytearray(f)
        c = conn()
        blocksize = 10000
        totalblocks = int(len(b) / blocksize)
        for n in range(0, totalblocks):
            blocksingle = bytearray([b[i] for i in range(n * blocksize, (n * blocksize) + blocksize)])
            result = hashlib.sha256(blocksingle)
            hashval = result.hexdigest()
            qry = "select block_id from blocks where hash_value='" + hashval + "'"
            rf = c.selectone(qry)
            blckid = ""
            if rf is not None:
                blckid = str(rf[0])
            else:
                sq = "select max(block_id) from blocks"
                blckid = str(c.mid(sq))
                qry = "INSERT INTO blocks (hash_value) VALUES ('" + hashval + "')"
                str(c.nonreturn(qry))

                with open("C:\\Users\\jnh\\PycharmProjects\\CP-ABE\\static\\fileblocks\\" + blckid,
                          "wb") as mypicklefile:
                    # pickle.dump(blocksingle, mypicklefile)

                    mypicklefile.write(blocksingle)

            qry = "INSERT INTO `fileblocks`(`fileid`,`blockid`) VALUES (" + str(fid) + "," + blckid + ")"
            c.nonreturn(qry)

        if totalblocks * blocksize < len(b):
            blocksingle = bytearray([b[i] for i