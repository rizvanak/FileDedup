 in range(totalblocks * blocksize, len(b))])
            result = hashlib.sha256(blocksingle)
            hashval = result.hexdigest()
            qry = "select block_id from blocks where hash_value='" + hashval + "'"
            rf = c.selectone(qry)
            blckid = ""
            if rf is not None:
                blckid = str(rf[0])
            else:
                sq = "select max(block_id) from blocks"
                blckid = str(c.mid(sq))
                qry = "INSERT INTO blocks (hash_value) VALUES ('" + hashval + "')"
                str(c.nonreturn(qry))

                with open("C:\\Users\\jnh\\PycharmProjects\\CP-ABE\\static\\fileblocks\\" + blckid,
                          "wb") as mypicklefile:
                    mypicklefile.write(blocksingle)
            qry = "INSERT INTO `fileblocks`(`fileid`,`blockid`) VALUES (" + str(fid) + "," + blckid + ")"
            c.nonreturn(qry)

        return ehome()




@app.route('/view_rule')
def view_rule():
    v = "select file_rule.rule_id,attr1.Attribute_name as attribute1,file_rule.operator,attr2.Attribute_name as attribute2,tbl_files.File_name from attribute as attr1,file_rule,attribute as attr2,tbl_files where attr1.Attribute_id=file_rule.attribute1 and attr2.Attribute_id=file_rule.attribute2 and tbl_files.File_id=file_rule.file_id"
    c = conn()
    v1 = c.selectall(v)
    return render_template("ad_rule_view.html", data=v1)
@app.route('/delete_rule/<sid>')
def delete_rule(sid):
    u="delete from file_rule where rule_id='"+sid+"'"
    c=conn()
    ul=c.nonreturn(u)
    return add_access()
@app.route('/eview_rule')
def eview_rule():
    v = "select file_rule.rule_id,attr1.Attribute_name as attribute1,file_rule.operator,attr2.Attribute_name as attribute2,tbl_files.File_name from attribute as attr1,file_rule,attribute as attr2,tbl_files where attr1.Attribute_id=file_rule.attribute1 and attr2.Attribute_id=file_rule.attribute2 and tbl_files.File_id=file_rule.file_id"
    c = conn()
    v1 = c.selectall(v)
    return rende